{"name": "Jimmy Donaldson", "born": "1998-05-07 00:00:00", "short_description": "Jimmy Donaldson (born May 7, 1998), better known by his online alias MrBeast, is an American YouTuber, Internet personality, businessman, and philanthropist. He has been credited with pioneering a genre of YouTube videos that center on expensive stunts. He is also the founder of MrBeast Burger and the co-creator of Team Trees, a fundraiser for the Arbor Day Foundation, which has raised over $23 million, and Team Seas, a fundraiser for Ocean Conservancy and The Ocean Cleanup, which has raised over $30 million.", "occupation": ["YouTuber", "Businessman"], "years_active": "2012-present", "genres": ["Comedy", "entertainment", "vlogsgaming"], "youtube_channel_subscribers": 88200000, "youtube_channel_total_views": 14408427446, "some_of_accomplishments": ["Raised $20,000,000 To Plant 20,000,000 Trees", "Given millions to charity", "Donated over 100 cars lol", "Gave away a private island", "Given away over 100 ps4s lol", "Gave away 1 million dollars in one video ", "Counted to 100k", "Read the Dictionary", "Watched Dance Till You're Dead For 10 Hours", "Read Bee Movie Script", "Read Longest English Word", "Watched Paint Dry", "Ubering Across America", "Watched It's Every Day Bro For 10 Hours", "Ran a marathon in the world's largest shoes", "Adopted every dog in a shelter"], "created_at": "2022-01-16 00:00:00"}